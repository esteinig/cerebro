manifest {
    name = "cerebro"
    author = "@esteinig"
    defaultBranch = "main"
    homePage = 'https://github.com/esteinig/cerebro'
    description = 'Metagenomic diagnostics of low-abundance pathogens'
    mainScript = 'main.nf'
    version = '0.7.0'
    // nextflowVersion = '>=23.04'
}

timeline {
    enabled = true
    file = "timeline.html"
    overwrite = true
}

report {
    enabled = true
    file = "report.html"
    overwrite = true
}

trace {
    enabled = true
    file = 'trace.txt'
    fields = 'task_id,name,status,exit,realtime,%cpu,%mem,rss,peak_rss'
    overwrite = true
}

executor {
  $local {
      cpus = 64
      memory = '128 GB'
  }
}

params {

    error_strategy = "ignore"
    
    mode {
        qc {
            enabled = false
        }
        io {
            enabled = false
        }
        dev {
            enabled = false
        }
    }

    production {
        enabled = false
        sample_sheet = null
        api {
            enabled = true
            url = "CEREBRO_API_URL"
            token = "CEREBRO_API_TOKEN"

            upload {
                enabled = true
                team = null
                db = null
                project = null
            }

        }
    }


    // =====================================================
    // Databases and references for taxonomic classification
    // =====================================================

    database {

        taxonomy {
            directory = "db/ncbi_tax"
        }

        alignment {
            viruses {
                index       = "db/virosaurus98_full_sr.mmi"
                fasta       = "db/virosaurus98_full_sr.fasta"
                blacklist   = null

                background {
                    fasta   = "db/SILVA_LSURef_NR99.fasta,db/SILVA_SSURef_NR99.fasta"
                    kraken2 = "db/langmead_pluspf_64GB,db/rrna"
                }
            }
            bacteria {
                index = null
                fasta = "db/refseq_bacteria_2022.fasta"
                mash  = "db/refseq_bacteria_2022.msh"
            }
            eukaryots {
                index = null
                fasta = "db/refseq_pf_2022.fasta"
                mash  = "db/refseq_pf_2022.msh"
            }
        }

        kmer {
            kraken2 = "db/langmead_eupath48,db/langmead_pluspf_64GB"
        }

        assembly {
            blast   = "db/NT_20230219"
            diamond = "db/NR_20230312/nr_diamond.dmnd"
        }

    }

    // =============================================
    // Module and submodule / process configurations
    // =============================================

    // Read modifications before any other modules are run

    reads {
        subsample {
            enabled    = false
            reads      = [15000000, 10000000, 5000000, 1000000]
            replicates = 1
        }
    }
    

    qc {
        enabled = true
        
        deduplication {
            enabled  = false
            method   = "none"                       // none, naive, umi-naive, umi-calib, umi-tools, umi-tools-naive

            umi_tools {
                seed        = 12372395              // random seed for umi-tools
                reference   = null                  // host reference index with ercc for alignment deduplication with umi-tools
            }
        }

        reads {
            fastp {
                enabled                 = true
                min_read_length         = 75
                cut_tail_quality        = 20
                complexity_threshold    = 30
                adapter_auto_detect     = false
                adapter_file            = null
                adapter_seq_1           = null
                adapter_seq_2           = null
                trim_poly_g             = 10
            }
        }

        controls {
            ercc {
                enabled = false
                fasta = null
            }
            phage {
                enabled = false
                fasta = null
                identifiers {
                    dna_extraction = "T4-Monash"
                    rna_extraction = null
                    sequencing     = "PhiX"
                }
            }
        }

        host {
            depletion {
                enabled     = true
                databases   = ""
                references  = ""
                taxa        = "Metazoa"
                direct      = "9606"
                min_cov     = 0
                min_len     = 50
                min_mapq    = 0
            }
        }

    }

    taxa {
        enabled = false

        alignment {
            enabled = true

            viruses {
                enabled = true
            } 
            bacteria {
                enabled = true
            }
            eukaryots {
                enabled = true
            }
        }
        kmer {
            enabled = true

            kraken2 {
                enabled = true
            }
        }
        assembly {
            enabled = true

            meta {
                enabled = true
            }
            viruses {
                enabled = false
            }
        }
    }
    
    host {
        enabled = false
        
        aneuploidy {
            enabled = true
            deduplicate = true                            // samotools markdup on host alignment bam
            markdup_distance = 100                        // http://www.htslib.org/algorithms/duplicate.html
            reference_index = "db/chm13v2_sr.mmi"
            cnvkit {
                enabled = true
                drop_low_coverage = false
                target_avg_size = 100000
                reference_fasta = "db/chm13v2.fa"
                normal_control = "db/HG007.5x.QC.bam"   // alignment reference must be the same as aneuploidy.reference_index
            }
        }
    }
}

// ================================
// Validation experiment parameters
// ================================

includeConfig "$baseDir/lib/configs/validation.config"


// ================================
// Process resource provisioning
// ================================

includeConfig "$baseDir/lib/configs/resources.config"


// ==================
// Execution Profiles
// ==================


profiles {

    // ====================
    // Development Profiles
    // ====================

    test_dev {
        params.mode.dev.enabled = true    // test utility functions, inputs and all modules deactivated
    }
    test_io {    
        params.mode.io.enabled  = true    // test input functions, all modules deactivated
    }
    test_qc {    

        // Test quality control workflow, taxonomic classification disabled
        // Default quality control components without assay controls or 
        // deduplication; can be enabled on command-line.

        params.mode.qc.enabled  = true    

        params.qc.enabled                   = true
        params.qc.deduplication.enabled     = false
        params.qc.reads.fastp.enabled       = true
        params.qc.controls.ercc.enabled     = false
        params.qc.controls.phage.enabled    = false
        params.qc.host.depletion.enabled    = true 

    }
    test_aneuploidy {

        // Test aneuploidy workflow which uses global quality
        // control parameters on the consented input samples 
        // (sample sheet column) except host depletion and 
        // the reference-free deduplication which are always
        // disabled. Deduplication including optical duplicates
        // is conducted when generating the host alignments. 

        // For creating the normal control alignment, use this
        // profile and disable the CNV step on execution of the
        // workflow (--host.aneuploidy.cnv false). This will 
        // symlink the BAM alignment into the workflow output
        // directory. Other quality control options may be 
        // changed as well depending on source of the normal
        // control reads.
        
        params.qc.enabled                           = true
        params.qc.deduplication.enabled             = false                          // hardcoded disabled in subworkflow for now
        params.qc.reads.fastp.enabled               = true
        params.qc.controls.ercc.enabled             = true
        params.qc.controls.phage.enabled            = true
        params.qc.host.depletion.enabled            = false                          // hardcoded disabled in subworkflow

        params.host.enabled                         = true
        params.host.aneuploidy.enabled              = true
        params.host.aneuploidy.cnv                  = true
        params.host.aneuploidy.deduplicate          = true                           // samtools markdup removal on host alignment bam
        params.host.aneuploidy.markdup_distance     = 100                            // http://www.htslib.org/algorithms/duplicate.html
        params.host.aneuploidy.reference_index      = "db/chm13v2_sr.mmi"
        params.host.aneuploidy.reference_fasta      = "db/chm13v2.fa"                // fasta must be the same as aneuploidy.reference_index
        params.host.aneuploidy.normal_control       = "db/HG007.CHM13v2.QC.bam"      // alignment reference must be aneuploidy.reference_index

        params.taxa.enabled                         = false
        params.resources.fastp.cpus                 = 64
        params.resources.minimap2_aneuploidy.cpus   = 196

    }
    
    // =================
    // Database Profiles
    // =================

    databases {
        params.qc.controls.ercc.fasta                 = "db/ERCC92.fasta"
        params.qc.controls.phage.fasta                = "db/T4.fasta"
        params.qc.deduplication.umi_tools.reference   = "db/chm13v2_ercc_sr.mmi"  // only umi-tools
        params.qc.host.depletion.references           = "db/chm13v2_sr.mmi"
        params.qc.host.depletion.databases            = "db/langmead_pluspf_64GB"

        params.virus_background_references = "db/SILVA_LSURef_NR99.fasta,db/SILVA_SSURef_NR99.fasta"
        params.virus_background_dbs = "db/langmead_pluspf_64GB,db/rrna"
        params.virus_db_index = "db/virosaurus98_full_sr.mmi"
        params.virus_db_fasta = "db/virosaurus98_full_sr.fasta"
        params.virus_blacklist = null
        
        params.bacteria_fasta = "db/refseq_bacteria_2022.fasta"
        params.bacteria_mash_index = "db/refseq_bacteria_2022.msh"
        params.eukaryots_mash_index = "db/refseq_pf_2022.msh"
        params.eukaryots_fasta = "db/refseq_pf_2022.fasta"
        params.meta_blast_nt = "db/NT_20230219"
        params.meta_diamond_nr = "db/NR_20230312/nr_diamond.dmnd"
        params.kraken2_dbs = "db/langmead_eupath48,db/langmead_pluspf_64GB"
    }

    
    // =================
    // Pipeline Profiles
    // =================


    cns_assay {
        
        params.qc.deduplication.enabled              = true
        params.qc.deduplication.method               = "umi-naive"
        params.qc.reads.enabled                      = true
        params.qc.controls.ercc.enabled              = true
        params.qc.controls.phage.enabled             = true
        params.qc.host.depletion.enabled             = true
        params.qc.reads.fastp.adapter_seq_1          = "AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"
        params.qc.reads.fastp.adapter_seq_2          = "AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"

        params.taxa.enabled                          = true

    }

    panviral {
        
        params.taxa.enabled                          = true
        params.taxa.alignment.enabled                = true
        params.taxa.alignment.viruses.enabled        = true
        params.taxa.alignment.bacteria.enabled       = false
        params.taxa.alignment.eukaryots.enabled      = false
        params.taxa.assembly.enabled                 = true
        params.taxa.assembly.meta.enabled            = false
        params.taxa.assembly.viruses.enabled         = true
        params.taxa.kmer.enabled                     = false

        params.qc.deduplication.enabled              = false
        params.qc.reads.enabled                      = true
        params.qc.controls.ercc.enabled              = false
        params.qc.controls.phage.enabled             = false
        params.qc.host.depletion.enabled             = true

        params.vircov_scan_reads                     = 0
        params.vircov_scan_regions                   = 0
        params.vircov_scan_regions_coverage          = 0

        params.vircov_remap_reads                    = 15  
        params.vircov_remap_coverage                 = 0.10
        params.vircov_remap_regions                  = 4
        params.vircov_remap_regions_coverage         = 0.3

    }

    
    // =================
    // Resource Profiles
    // =================


    dgx {        
        params.resources.ivar.cpus = 1
        params.resources.mash.cpus = 8
        params.resources.fastp.cpus = 16
        params.resources.spades.cpus = 16
        params.resources.cerebro.cpus = 1
        params.resources.umi_cerebro.cpus = 2
        params.resources.kraken2.cpus = 16
        params.resources.minimap2.cpus = 32
        params.resources.blast_nt.cpus = 32
        params.resources.diamond_nr.cpus = 32
        params.resources.meta_spades.cpus = 32
        params.resources.kraken2uniq.cpus = 16
        params.resources.umi_align.cpus = 32
        params.resources.umi_tools.cpus = 1
        params.resources.umi_calib.cpus = 8
        params.resources.rasusa.cpus = 2
        params.resources.scrubby_reads.cpus = 32
        params.resources.scrubby_single.cpus = 8
        params.resources.minimap2_realign.cpus = 16
        params.resources.minimap2_aneuploidy.cpus = 64
        params.resources.cnvkit_aneuploidy.cpus = 2          // only parallelises on one sample and x control bam files

        params.resources.blast_nt.memory    = "300 GB"
        params.resources.diamond_nr.memory  = "128 GB"
        params.resources.kraken2uniq.memory = "128 GB"
        params.resources.meta_spades.memory = "300 GB"

        // Around 160 GB memory for these settings

        params.meta_diamond_nr_block_size = 8
        params.meta_diamond_nr_index_chunks = 1
    }

    limit_medium {
        executor.$local.cpus = 128
        executor.$local.memory = '512 GB'
    }

    limit_large {
        executor.$local.cpus = 196
        executor.$local.memory = '1024 GB'
    }

    // ======================================
    // Experiment profiles for assay protocol
    // ======================================

    // ERCC and EDCC validation experiment with
    // deduplication evaluation for biomass calculations

    ercc_validation {

        params.qc.controls.ercc.enabled                         = true
        params.qc.host.depletion.enabled                        = true

        params.validation.ercc.enabled                          = true 
        params.validation.ercc.deduplication.none               = true
        params.validation.ercc.deduplication.fastp              = true
        params.validation.ercc.deduplication.naive              = true
        params.validation.ercc.deduplication.umi_naive          = true
        params.validation.ercc.deduplication.umi_calib          = true
        params.validation.ercc.deduplication.umi_tools          = false
        params.validation.ercc.deduplication.umi_tools_naive    = false

    }
    exp_ercc_none {
        params.mode.qc.enabled = true 
        params.qc.deduplication.enabled = false
        params.qc.deduplication.method = null
        params.qc.controls.ercc.enabled = true
        params.qc.host.depletion.enabled = true
    }
    exp_ercc_fastp {
        params.mode.qc.enabled = true 
        params.qc.deduplication.enabled = true
        params.qc.deduplication.method  = "fastp"
        params.qc.controls.ercc.enabled = true
        params.qc.host.depletion.enabled = true
    }
    exp_ercc_naive {
        params.mode.qc.enabled = true 
        params.qc.deduplication.enabled = true
        params.qc.deduplication.method  = "naive"
        params.qc.controls.ercc.enabled = true
        params.qc.host.depletion.enabled = true
    }
    exp_ercc_naive_umi {
        params.mode.qc.enabled = true 
        params.qc.deduplication.enabled = true
        params.qc.deduplication.method  = "umi-naive"
        params.qc.controls.ercc.enabled = true
        params.qc.host.depletion.enabled = true
    }
    exp_ercc_calib{
        params.mode.qc.enabled = true 
        params.qc.deduplication.enabled = true
        params.qc.deduplication.method = "umi-calib"
        params.qc.controls.ercc.enabled = true
        params.qc.host.depletion.enabled = true
    }
    exp_ercc_umi_tools {
        params.mode.qc.enabled = true 
        params.qc.deduplication.enabled = true
        params.qc.deduplication.method  = "umi-tools"
        params.qc.controls.ercc.enabled = true
        params.qc.host.depletion.enabled = true
    }
    exp_ercc_umi_tool_naive {
        params.mode.qc.enabled = true 
        params.qc.deduplication.enabled = true
        params.qc.deduplication.method = "umi-tools-naive"
        params.qc.controls.ercc.enabled = true
        params.qc.host.depletion.enabled = true
    }
}

process {
    errorStrategy = params.error_strategy
}