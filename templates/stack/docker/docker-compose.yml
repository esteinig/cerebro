version: "3.8"

services:

  {{#if traefik.launch }}
  reverse-proxy:
    image: traefik:v2.10
    restart: unless-stopped
    ports:
      # To be able to listen on port 80 (http) - check firewall settings
      - mode: host
        published: 80
        target: 80
      # To be able to listen on port 443 (https) - check firewall settings
      - mode: host
        published: 443
        target: 443
    volumes:
      # Set the container timezone by sharing the read-only localtime
      - /etc/localtime:/etc/localtime:ro 
      # Give access to the UNIX Docker socket
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Map the static configuration into the container
      - {{{ outdir }}}/traefik/static.yml:/etc/traefik/traefik.yml:ro
      # Map the dynamic configuration into the container
      - {{{ outdir }}}/traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
      # Set the location where the local ACME certificate is saved
      - {{{ outdir }}}/certs:/etc/traefik/certs                                           
    networks:
      - proxy
    security_opt:
      - no-new-privileges:true
  {{/if}}
  
  # Envionment variable file is copied into container from deployment configuration
  # and not loaded as Docker environment variables
  cerebro-app:
    build:
      context: {{{ outdir }}}/cerebro
      dockerfile: {{{ outdir }}}/docker/Dockerfile.app
    restart: unless-stopped
    {{#if dev }}
    # Development run server - DO NOT RUN IN PRODUCTION
    command: bash -c 'export PUBLIC_CEREBRO_APP_REVISION="$(git -C /home/node/cerebro name-rev --tags --name-only $(git -C /home/node/cerebro rev-parse HEAD)) @ $(git -C /home/node/cerebro rev-parse --abbrev-ref HEAD) $(git -C /home/node/cerebro show --oneline -s |  cut -d" " -f1)" && cp -r /app/node_modules . && npm run dev'
    {{else}}
    # Production run of build - show latest tag, branch, commit of deployed repository
    command: bash -c 'export PUBLIC_CEREBRO_APP_REVISION="$(git -C /home/node/cerebro name-rev --tags --name-only $(git -C /home/node/cerebro rev-parse HEAD)) @ $(git -C /home/node/cerebro rev-parse --abbrev-ref HEAD) $(git -C /home/node/cerebro show --oneline -s |  cut -d" " -f1)" && node -r dotenv/config build'
    {{/if}}
    expose:
      - 8000
    volumes:
      {{#if dev }}
      # Path mount for linked repository in development deployment (local dev)
      - {{{ outdir }}}/cerebro/app/:/home/node/app
      {{/if}}
      - {{{ outdir }}}/cerebro_api/app.env:/home/node/app/.env:ro
      - {{{ outdir }}}/cerebro:/home/node/cerebro:ro  # host the repository for runtime git version parsing (see above commands)
    networks:
      - cerebro
      - proxy
    security_opt:
      - no-new-privileges:true
    depends_on:  
      - cerebro-api
      - cerebro-database
      - cerebro-auth-session
      - cerebro-auth-onetime
    labels:
      traefik.enable: "true"
      traefik.docker.network: "proxy"
      {{#if traefik.is_localhost }}
      traefik.http.routers.cerebro-app-{{{ traefik.subdomain.router.app }}}.rule: "Host(`{{{ traefik.subdomain.app }}}.{{{ traefik.localhost.domain }}}`)"
      traefik.http.routers.cerebro-app-{{{ traefik.subdomain.router.app }}}.tls: "{{ traefik.localhost.tls }}"
      traefik.http.routers.cerebro-app-{{{ traefik.subdomain.router.app }}}.entrypoints: "{{{ traefik.localhost.entrypoint }}}"
      {{else}}
      traefik.http.routers.cerebro-app-{{{ traefik.subdomain.router.app }}}.rule: "Host(`{{{ traefik.subdomain.app }}}.{{{ traefik.web.domain }}}`)"
      traefik.http.routers.cerebro-app-{{{ traefik.subdomain.router.app }}}.entrypoints: "https"
      traefik.http.routers.cerebro-app-{{{ traefik.subdomain.router.app }}}.middlewares: "default@file"
      traefik.http.routers.cerebro-app-{{{ traefik.subdomain.router.app }}}.tls.certresolver: "letsEncrypt"
      traefik.http.routers.cerebro-app-{{{ traefik.subdomain.router.app }}}.tls.options: "modern@file"
      traefik.http.routers.cerebro-app-{{{ traefik.subdomain.router.app }}}.tls: "true"
      {{/if}}

  # CEREBRO_CONFIG_FILE is automatically parsed from command-line
  cerebro-api:
    build:
      context: {{{ outdir }}}/cerebro
      dockerfile: {{{ outdir }}}/docker/Dockerfile.server
    restart: unless-stopped
    {{#if dev}}
    {{#if trigger}}
    command: bash -c 'touch /usr/src/cerebro/.trigger && cargo watch -w /usr/src/cerebro/.trigger -x "run --features pdf stack run-server --host 0.0.0.0 --port 8080 --threads 8"'
    {{else}}
    command: cargo watch -w /usr/src/cerebro/src -w /usr/src/cerebro/Cargo.toml -x "run --features pdf stack run-server --host 0.0.0.0 --port 8080 --threads 8"
    {{/if}}
    {{else}}
    command: cerebro stack run-server --host 0.0.0.0 --port 8080 --threads 8
    {{/if}}
    expose:
      - 8080
    volumes:
      {{#if dev }}
      # Path mount of linked repository in development deployment
      - {{{ outdir }}}/cerebro:/usr/src/cerebro
      {{else}}
      # Volume mount for application in production deployment
      - cerebro_api:/data
      {{/if}}
      - {{{ outdir }}}/cerebro/templates:/data/templates:ro
    networks:
      - cerebro
      - proxy
    environment:
      CEREBRO_CONFIG_FILE: /run/secrets/cerebro_config
    depends_on:  
      - cerebro-database
      - cerebro-auth-session
      - cerebro-auth-onetime
    security_opt:
      - no-new-privileges:true
    secrets:
      - cerebro_config
    labels:
      traefik.enable: "true"
      traefik.docker.network: "proxy"
      {{#if traefik.is_localhost }}
      traefik.http.routers.cerebro-api-{{{ traefik.subdomain.router.api }}}.rule: "Host(`{{{ traefik.subdomain.api }}}.{{{ traefik.localhost.domain }}}`)"
      traefik.http.routers.cerebro-api-{{{ traefik.subdomain.router.api }}}.tls: "{{ traefik.localhost.tls }}"
      traefik.http.routers.cerebro-api-{{{ traefik.subdomain.router.api }}}.entrypoints: "{{{ traefik.localhost.entrypoint }}}"
      {{else}}
      traefik.http.routers.cerebro-api-{{{ traefik.subdomain.router.api }}}.rule: "Host(`{{{ traefik.subdomain.api }}}.{{{ traefik.web.domain }}}`)"
      traefik.http.routers.cerebro-api-{{{ traefik.subdomain.router.api }}}.entrypoints: "https"
      traefik.http.routers.cerebro-api-{{{ traefik.subdomain.router.api }}}.middlewares: "default@file"
      traefik.http.routers.cerebro-api-{{{ traefik.subdomain.router.api }}}.tls.certresolver: "letsEncrypt"
      traefik.http.routers.cerebro-api-{{{ traefik.subdomain.router.api }}}.tls.options: "modern@file"
      traefik.http.routers.cerebro-api-{{{ traefik.subdomain.router.api }}}.tls: "true"
      {{/if}}

  # Cerebro model and user database 
  cerebro-database:
    image: mongo:7.0.0-rc10
    restart: unless-stopped
    command: mongod --auth --quiet --logpath /dev/null
    expose:
      - 27017
    volumes:
      - cerebro_database:/data/db
      - cerebro_database_cfg:/data/configdb # will create anonymous volumes otherwise if not specified
      - {{{ outdir }}}/mongodb/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    networks:
      - cerebro
    environment:
      MONGODB_CONFIG_FILE: /run/secrets/mongodb_config
    security_opt:
      - no-new-privileges:true
    secrets:
      - mongodb_config


  # Token database for authenticated user sessions
  cerebro-auth-session:
    image: redis:7.0.12-alpine
    restart: unless-stopped
    expose:
      - 6379
    volumes:
      - cerebro_auth_session:/data
    networks:
      - cerebro
    depends_on:  
      - cerebro-database
    security_opt:
      - no-new-privileges:true


  # Token database for one-time verification and password reset
  cerebro-auth-onetime:
    image: redis:7.0.12-alpine
    restart: unless-stopped
    command: --port 6380
    expose:
      - 6380
    volumes:
      - cerebro_auth_onetime:/data
    networks:
      - cerebro
    depends_on:  
      - cerebro-database
    security_opt:
      - no-new-privileges:true

volumes:
  cerebro_app:
    driver: local
  cerebro_api:
    driver: local
  cerebro_database:
    driver: local
  cerebro_database_cfg:
    driver: local
  cerebro_auth_session:
    driver: local
  cerebro_auth_onetime:
    driver: local

networks:
  cerebro:
    external: false
    name: {{{ name }}}
  proxy:
    name: {{{ traefik.network.name }}}   
    external: {{{ traefik.network.external }}}

# Do not need to use files as secrets necessarily but allows for easier environmental variable settings
secrets:
  cerebro_config:
    file: {{{ outdir }}}/cerebro_api/server.toml
  mongodb_config:
    file: {{{ outdir }}}/mongodb/database.env
  